using System.Collections;
using System.Collections.Generic;
using UnityEngine;



public class CarControllerPlayer : MonoBehaviour
{

    // Retrieving all Car components from Unity
    [Header("Wheel colliders")]
    [SerializeField] WheelCollider FrontleftCollider;
    [SerializeField] WheelCollider FrontRightCollider;
    [SerializeField] WheelCollider BackleftCollider;
    [SerializeField] WheelCollider BackRightCollider;

    [Header("Wheel objects")]
    [SerializeField] Transform FrontLeftTransform;
    [SerializeField] Transform FrontRightTransform;
    [SerializeField] Transform BackLeftTransform;
    [SerializeField] Transform BackRightTransform;

    // Some adjustables to be able to configure the car from within Unity
    [Header("Engine attributes")]
    [SerializeField] float EnginePower;
    [SerializeField] float Brakepower;
    [SerializeField] float MaxSteerAngle;

    private float CurrentEnginePower = 0f;
    private float CurrentBrakePower = 0f;
    private float CurrentSteerAngle = 0f;



    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    //FixedUpdate is called once per physics update
    private void FixedUpdate()
    {

        // Allowing braking with space

        if (Input.GetKey(KeyCode.Space))
            CurrentBrakePower = Brakepower;
        else
            CurrentBrakePower = 0f;

        FrontleftCollider.brakeTorque = CurrentBrakePower;
        FrontRightCollider.brakeTorque = CurrentBrakePower;
        BackleftCollider.brakeTorque = CurrentBrakePower;
        BackRightCollider.brakeTorque = CurrentBrakePower;


        // Making the car go forward and backward with w,s or up-arrow,down-arrow

        CurrentEnginePower = EnginePower * Input.GetAxis("Vertical");

        FrontleftCollider.motorTorque = CurrentEnginePower;
        FrontRightCollider.motorTorque = CurrentEnginePower;


        // Making the car steer with a,d or left-arrow,right-arrow

        CurrentSteerAngle = MaxSteerAngle * Input.GetAxis("Horizontal");

        FrontleftCollider.steerAngle = CurrentSteerAngle;
        FrontRightCollider.steerAngle = CurrentSteerAngle;


        //making the wheel models turn and rotate

        void UpdateWheel(WheelCollider col, Transform trans)
        {
            Vector3 position;
            Quaternion rotation;
            col.GetWorldPose(out position, out rotation);

            trans.position = position;
            trans.rotation = rotation;
        }
        UpdateWheel(FrontleftCollider, FrontLeftTransform);
        UpdateWheel(FrontRightCollider, FrontRightTransform);
        UpdateWheel(BackleftCollider, BackLeftTransform);
        UpdateWheel(BackRightCollider, BackRightTransform);
    }
}
